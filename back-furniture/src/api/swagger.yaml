openapi: 3.0.0
info:
  title: Furniture Store
  description: This is Furniture Shop Backend 
  version: 0.1.9
servers:
  - url: /api/v1
security:
  - BearerAuth: []
securityDefinitions:
  BearerAuth:
    type: apiKey
    name: Authorization
    in: header
    description: Enter your Bearer token here
consumes:
  - application/json 
paths:
  /users:
    get:
      tags:
        - "User"
      x-swagger-router-controller: user
      operationId: getUser
      summary: Returns a list of users.
      description: Optional extended description in CommonMark or HTML.
      parameters:
        - name: currentPage
          in: query
          description: currentPage
          required: false
          schema:
            type: integer
            minimum: 1
        - name: pageSize
          in: query
          description: pageSize
          required: false
          schema:
            type: integer
            minimum: 1
        - name: sort
          in: query
          description: "sort column"
          required: false
          schema:
            type: integer
        - name: sortDirection
          in: query
          description: "sort i.e asc desc"
          required: false
          schema:
            type: integer
            enum: 
              - asc
              - desc                                   
      responses:
        '200':    # status code
          description: Default Response
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/Users"
    post: 
      x-swagger-router-controller: user
      operationId: addUser
      summary: Register a new user.
      tags:
        - "User"      
      description: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: sumit
                lastName:
                  type: string
                  example: kumar
                username:
                  type: string
                  example: sumit1234
                email:
                  type: string
                  example: sumitbhatia0796@gmail.com
                password:
                  type: string
                  example: sumit9876
                mobile:
                  type: string
                  example: "7807465496"
                  pattern: "^[0-9()+][0-9-() ]*[0-9]$"
                  maxLength: 30
                dataOfBirth:
                  type: string
                  example: 11-12-2001
                gender:
                  type: string
                  example: male
                address:
                  type: string
                  example: vill khaterwar teh bhoranj
                country:
                  type: string
                  example: india
                state:
                  type: string
                  example: Himachal Pardesh
                city:
                  type: string
                  example: Hamirpur
                pin:
                  type: string 
                  example: 176045 
      responses: 
        '200':
          description: Created 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"      
    delete:
      tags:
        - "User"
      x-swagger-router-controller: user
      operationId: deleteAllUser
      summary: Delete All Available User.
      responses:
        '204':    # status code
          description: Default Response
  /users/{userId}:
    get:
      tags:
        - "User"
      x-swagger-router-controller: user
      operationId: getUserById
      summary: Returns  user.
      description: Optional extended description in CommonMark or HTML.
      parameters:
        - name: userId
          in: path
          description: userId
          required: false
          schema:
            type: string
      responses:
        '200':    # status code
          description: Default Response
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/User"
      security:
        - authentication: []             
    patch: 
      x-swagger-router-controller: user
      operationId: updateUserById
      summary: Register a new user.
      tags:
        - "User"      
      description: Register a new user
      parameters:
        - name: userId
          in: path
          description: userId
          required: false
          schema:
            type: string      
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: sumit9876
                mobile:
                  type: string
                  example: "7807465496"
                  pattern: "^[0-9()+][0-9-() ]*[0-9]$"
                  maxLength: 30
                address:
                  type: string
                  example: vill khaterwar teh bhoranj
                country:
                  type: string
                  example: india
                state:
                  type: string
                  example: Himachal Pardesh
                city:
                  type: string
                  example: Hamirpur
                pin:
                  type: string 
                  example: 176045 
      responses: 
        '200':
          description: Created 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"      
    delete:
      tags:
        - "User"
      x-swagger-router-controller: user
      operationId: deleteUserById
      summary: Delete All Available User.
      parameters:
        - name: userId
          in: path
          description: userId
          required: false
          schema:
            type: string        
      responses:
        '204':    # status code
          description: Default Response
  /users/login:          
    post: 
      x-swagger-router-controller: user
      operationId: loginUser
      summary: Register a new user.
      tags:
        - "User"      
      description: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: sumit1234
                password:
                  type: string
                  example: sumit9876
      responses: 
        '200':
          description: Created 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"          
  /productHome:
    get:
      tags:
        - "ProductHome"
      x-swagger-router-controller: productHome
      operationId: getProductHome
      summary: Returns a list of products.
      parameters:
        - name: currentPage
          in: query
          description: currentPage
          required: false
          schema:
            type: integer
            minimum: 1
        - name: pageSize
          in: query
          description: pageSize
          required: false
          schema:
            type: integer
            minimum: 1
        - name: sort
          in: query
          description: "sort column"
          required: false
          schema:
            type: integer
        - name: sortDirection
          in: query
          description: "sort i.e asc desc"
          required: false
          schema:
            type: integer
            enum: 
              - asc
              - desc                                   
      responses:
        '200':    # status code
          description: Default Response
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ProductHomes"
    post: 
      x-swagger-router-controller: productHome
      operationId: addProductHome
      summary: Register a new productHome.
      tags:
        - "ProductHome"      
      description: Register a new productHome
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productName:
                  type: string
                  example: Door
                imageUrl:
                  type: string
                  example: sumit
                description:
                  type: string
                  example: good quality
                productCategory:
                  type: string
                  example: Doors
      responses: 
        '200':
          description: Created 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductHome"      
    delete:
      tags:
        - "ProductHome"
      x-swagger-router-controller: producthome
      operationId: deleteAllProductHome
      summary: Delete All Available producthome.
      responses:
        '204':    # status code
          description: Default Response
  /productHome/{productHomeId}:
    get:
      tags:
        - "ProductHome"
      x-swagger-router-controller: productHome
      operationId: getProductHomeById
      summary: Returns  productHome.
      parameters:
        - name: productHomeId
          in: path
          description: productHomeId
          required: false
          schema:
            type: string
      responses:
        '200':    # status code
          description: Default Response
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ProductHome"
    patch: 
      x-swagger-router-controller: productHome
      operationId: updateProductHomeById
      summary: update in a productHome.
      tags:
        - "ProductHome"      
      description: Register a new productHome
      parameters:
        - name: productHomeId
          in: path
          description: productHomeId
          required: false
          schema:
            type: string      
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productName:
                  type: string
                  example: Wooden door
                imageUrl:
                  type: string
                  example: door.jpg
                description:
                  type: string
                  example: Good quality
                productCategory:
                  type: string
                  example: doors
      responses: 
        '200':
          description: Created 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductHome"      
    delete:
      tags:
        - "ProductHome"
      x-swagger-router-controller: productHome
      operationId: deleteProductHomeById
      summary: Delete All Available productHome.
      parameters:
        - name: productHomeId
          in: path
          description: productHomeId
          required: false
          schema:
            type: string        
      responses:
        '204':    # status code
          description: Default Response           

  /product:
    get:
      tags:
        - "Product"
      x-swagger-router-controller: product
      operationId: getProduct
      summary: Returns a list of products.
      parameters:
        - name: currentPage
          in: query
          description: currentPage
          required: false
          schema:
            type: integer
            minimum: 1
        - name: pageSize
          in: query
          description: pageSize
          required: false
          schema:
            type: integer
            minimum: 1
        - name: sort
          in: query
          description: "sort column"
          required: false
          schema:
            type: integer
        - name: sortDirection
          in: query
          description: "sort i.e asc desc"
          required: false
          schema:
            type: integer
            enum: 
              - asc
              - desc                                   
      responses:
        '200':    # status code
          description: Default Response
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/Products"
    post: 
      x-swagger-router-controller: product
      operationId: addProduct
      summary: Register a new product.
      tags:
        - "Product"      
      description: Register a new productHome
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productName:
                  type: string
                  example: Door
                image:
                  type: string
                  example: sumit
                description:
                  type: string
                  example: good quality
                category:
                  type: string
                  example: Doors
                price:
                  type: number
                  example: 233
                homecategory:
                  type: string
                  example: bed
                subcategory:
                  type: string
                  example: good quality
                availability:
                  type: boolean
                  example: true
                quantity:
                  type: number
                  example: 2
                rating:
                  type: number
                  example: 4                                   
      responses: 
        '200':
          description: Created 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"      
    delete:
      tags:
        - "Product"
      x-swagger-router-controller: product
      operationId: deleteAllProduct
      summary: Delete All Available product.
      responses:
        '204':    # status code
          description: Default Response
  /product/{productId}:
    get:
      tags:
        - "Product"
      x-swagger-router-controller: product
      operationId: getProductById
      summary: Returns  product.
      parameters:
        - name: productId
          in: path
          description: productId
          required: false
          schema:
            type: string
      responses:
        '200':    # status code
          description: Default Response
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/Product"
    patch: 
      x-swagger-router-controller: product
      operationId: updateProductById
      summary: update in a product.
      tags:
        - "Product"      
      description: Register a new productHome
      parameters:
        - name: productId
          in: path
          description: productId
          required: false
          schema:
            type: string      
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productName:
                  type: string
                  example: Door
                image:
                  type: string
                  example: sumit
                description:
                  type: string
                  example: good quality
                category:
                  type: string
                  example: Doors
                price:
                  type: number
                  example: 1
                homecategory:
                  type: string
                  example: bed
                subcategory:
                  type: string
                  example: good quality
                availability:
                  type: boolean
                  example: true
                quantity:
                  type: number
                  example: 3
                rating:
                  type: number
                  example: 4
      responses: 
        '200':
          description: Created 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"      
    delete:
      tags:
        - "Product"
      x-swagger-router-controller: product
      operationId: deleteProductById
      summary: Delete All Available product.
      parameters:
        - name: productId
          in: path
          description: productId
          required: false
          schema:
            type: string        
      responses:
        '204':    # status code
          description: Default Response   

  /productDetail:
    get:
      tags:
        - "ProductDetail"
      x-swagger-router-controller: productDetail
      operationId: getProductDetail
      summary: Returns a list of productDetail.
      parameters:
        - name: currentPage
          in: query
          description: currentPage
          required: false
          schema:
            type: integer
            minimum: 1
        - name: pageSize
          in: query
          description: pageSize
          required: false
          schema:
            type: integer
            minimum: 1
        - name: sort
          in: query
          description: "sort column"
          required: false
          schema:
            type: integer
        - name: sortDirection
          in: query
          description: "sort i.e asc desc"
          required: false
          schema:
            type: integer
            enum: 
              - asc
              - desc                                   
      responses:
        '200':    # status code
          description: Default Response
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ProductDetails"
    post: 
      x-swagger-router-controller: productDetail
      operationId: addProductDetail
      summary: Register a new productDetail.
      tags:
        - "ProductDetail"      
      description: Register a new productDetail
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productName:
                  type: string
                  example: Door
                productId:
                  type: string
                  example: sumit
                description:
                  type: string
                  example: goodquality
                category:
                  type: string
                  example: Doors
                price:
                  type: number
                  example: 233
                homeCategory:
                  type: string
                  example: bed
                subcategory:
                  type: string
                  example: goodquality
                availability:
                  type: boolean
                  example: true
                quantity:
                  type: number
                  example: 2
                rating:
                  type: number
                  example: 4
                images:
                  type: array
                  items:
                    type: string
                  example:
                    - bed
                    - sofa 
                assembly:
                  type: string
                  example: anything
                brand:
                  type: string
                  example: SARA
                material:
                  type: string
                  example: wooden
                color:
                  type: string
                  example: brown
                type:
                  type: string
                  example: bed
                totalOrder:
                  type: number
                  example: 5
                dimensionInInch:
                  type: string
                  example: 12in   
                dimensionInCem:
                  type: string
                  example: 2cm
                storage:
                  type: string
                  example: xyz
                weight:
                  type: string
                  example: 40KG.
                warranty:
                  type: number
                  example: 2                                     
      responses: 
        '200':
          description: Created 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDetail"      
    delete:
      tags:
        - "ProductDetail"
      x-swagger-router-controller: productDetail
      operationId: deleteAllProductDetail
      summary: Delete All Available productDetail.
      responses:
        '204':    # status code
          description: Default Response
  /productDetail/{productDetailId}:
    get:
      tags:
        - "ProductDetail"
      x-swagger-router-controller: productDetail
      operationId: getProductDetailById
      summary: Returns  productDetail.
      parameters:
        - name: productDetailId
          in: path
          description: productDetailId
          required: false
          schema:
            type: string
      responses:
        '200':    # status code
          description: Default Response
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ProductDetail"
    patch: 
      x-swagger-router-controller: productDetail
      operationId: updateProductDetailById
      summary: update in a productDetail.
      tags:
        - "ProductDetail"      
      description: Register a new productDetail
      parameters:
        - name: productDetailId
          in: path
          description: productDetailId
          required: false
          schema:
            type: string      
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productName:
                  type: string
                  example: Door
                productId:
                  type: string
                  example: sumit
                description:
                  type: string
                  example: goodquality
                category:
                  type: string
                  example: Doors
                price:
                  type: number
                  example: 233
                homeCategory:
                  type: string
                  example: bed
                subcategory:
                  type: string
                  example: goodquality
                availability:
                  type: boolean
                  example: true
                quantity:
                  type: number
                  example: 2
                rating:
                  type: number
                  example: 4
                images:
                  type: array
                  items:
                    type: string
                  example:
                    - bed
                    - sofa 
                assembly:
                  type: string
                  example: anything
                brand:
                  type: string
                  example: SARA
                material:
                  type: string
                  example: wooden
                color:
                  type: string
                  example: brown
                type:
                  type: string
                  example: bed
                totalOrder:
                  type: number
                  example: 5
                dimensionInInch:
                  type: string
                  example: 12in   
                dimensionInCem:
                  type: string
                  example: 2cm
                storage:
                  type: string
                  example: xyz
                weight:
                  type: string
                  example: 40KG.
                warranty:
                  type: number
                  example: 2
      responses: 
        '200':
          description: Created 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDetail"      
    delete:
      tags:
        - "ProductDetail"
      x-swagger-router-controller: productDetail
      operationId: deleteProductDetailById
      summary: Delete Available productDetailbyId.
      parameters:
        - name: productDetailId
          in: path
          description: productDetailId
          required: false
          schema:
            type: string        
      responses:
        '204':    # status code
          description: Default Response  
  /productDetail/ByProductID/{productId}:
    get:
      tags:
        - "ProductDetail"
      x-swagger-router-controller: productDetail
      operationId: getProductDetailByProductId
      summary: Returns  productDetail.
      parameters:
        - name: productId
          in: path
          description: productId
          required: false
          schema:
            type: string
      responses:
        '200':    # status code
          description: Default Response
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ProductDetail" 

  /cart:
    get:
      tags:
        - "cart"
      x-swagger-router-controller: cart
      operationId: getProductInCart
      summary: Returns a list of products.
      parameters:
        - name: currentPage
          in: query
          description: currentPage
          required: false
          schema:
            type: integer
            minimum: 1
        - name: pageSize
          in: query
          description: pageSize
          required: false
          schema:
            type: integer
            minimum: 1
        - name: sort
          in: query
          description: "sort column"
          required: false
          schema:
            type: integer
        - name: sortDirection
          in: query
          description: "sort i.e asc desc"
          required: false
          schema:
            type: integer
            enum: 
              - asc
              - desc                                   
      responses:
        '200':    # status code
          description: Default Response
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/carts"
    post: 
      x-swagger-router-controller: cart
      operationId: addProductInCart
      summary: Register a new productInCart.
      tags:
        - "cart"      
      description: Register a new productInCart
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productName:
                  type: string
                  example: Door
                image:
                  type: string
                  example: xyz
                price:
                  type: number
                  example: 233
                quantitySelected:
                  type: number
                  example: 2
                brand:
                  type: string
                  example: sara   
                productId:
                  type: string
                  example: sfsfs
                productDetailId:
                  type: string
                  example: dadsfs   
                userId:
                  type: string
                  example: dadsfs                                                                   
      responses: 
        '200':
          description: Created 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/cart"      
    delete:
      tags:
        - "cart"
      x-swagger-router-controller: cart
      operationId: deleteAllProductInCart
      summary: Delete All Available product.
      responses:
        '204':    # status code
          description: Default Response
  /cart/{cartId}:
    get:
      tags:
        - "cart"
      x-swagger-router-controller: cart
      operationId: getProductInCartById
      summary: Returns  product.
      parameters:
        - name: cartId
          in: path
          description: cartId
          required: false
          schema:
            type: string
      responses:
        '200':    # status code
          description: Default Response
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/cart"
    patch: 
      x-swagger-router-controller: cart
      operationId: updateProductInCartById
      summary: update in a product.
      tags:
        - "cart"      
      description: Update a new productInCart
      parameters:
        - name: cartId
          in: path
          description: cartId
          required: false
          schema:
            type: string      
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productName:
                  type: string
                  example: Door
                image:
                  type: string
                  example: xyz
                price:
                  type: number
                  example: 233
                quantitySelected:
                  type: number
                  example: 2
                brand:
                  type: string
                  example: sara  
      responses: 
        '200':
          description: Created 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/cart"      
    delete:
      tags:
        - "cart"
      x-swagger-router-controller: cart
      operationId: deleteProductInCartById
      summary: Delete All Available productInCart.
      parameters:
        - name: cartId
          in: path
          description: cartId
          required: false
          schema:
            type: string        
      responses:
        '204':    # status code
          description: Default Response                         
components:
  securitySchemes:
    BearerAuth:
      type: apiKey
      name: Authorization
      in: header
      description: Enter your Bearer token here
  schemas:
    User:
      type: object
      properties:
        firstName:
          type: string
          example: Anil      
        lastName:
          type: string
          example: kumar 
        username:
          type: string
          example: Anil34 
        email:
          type: string
          example: anilbhatia34@gmail.com 
        mobile:
          type: string
          example: Anil 
        gender:
          type: string
          example: Anil 
        country:
          type: string
          example: Anil 
        city:
          type: string
          example: Anil 
        address:
          type: string
          example: Anil    
    Users:
      type: array
      items:
        $ref: "#/components/schemas/User" 
    ProductHome:
      type: object
      properties:
        productName:
          type: string
          example: Door      
        imageUrl:
          type: string
          example: doors.jpg 
        description:
          type: string
          example: good quality 
        productCategory:
          type: string
          example: Doors 
    ProductHomes:
      type: array
      items:
        $ref: "#/components/schemas/ProductHomes"                                                 
    Product:
      type: object
      properties:
                productName:
                  type: string
                  example: Door
                image:
                  type: string
                  example: sumit
                description:
                  type: string
                  example: good quality
                category:
                  type: string
                  example: Doors
                price:
                  type: number
                  example: Door
                homecategory:
                  type: string
                  example: bed
                subcategory:
                  type: string
                  example: good quality
                availability:
                  type: string
                  example: Doors
                quantity:
                  type: number
                  example: good quality
                rating:
                  type: string
                  example: Doors 
    Products:
      type: array
      items:
        $ref: "#/components/schemas/Product"  
    ProductDetail:
      type: object
      properties:
                productName:
                  type: string
                  example: Door
                productId:
                  type: string
                  example: sumit
                description:
                  type: string
                  example: goodquality
                category:
                  type: string
                  example: Doors
                price:
                  type: number
                  example: 233
                homeCategory:
                  type: string
                  example: bed
                subcategory:
                  type: string
                  example: goodquality
                availability:
                  type: boolean
                  example: true
                quantity:
                  type: number
                  example: 2
                rating:
                  type: number
                  example: 4
                images:
                  type: array
                  items:
                    type: string
                  example:
                    - bed
                    - sofa 
                assembly:
                  type: string
                  example: anything
                brand:
                  type: string
                  example: SARA
                material:
                  type: string
                  example: wooden
                color:
                  type: string
                  example: brown
                type:
                  type: string
                  example: bed
                totalOrder:
                  type: number
                  example: 5
                dimensionInInch:
                  type: string
                  example: 12in   
                dimensionInCem:
                  type: string
                  example: 2cm
                storage:
                  type: string
                  example: xyz
                weight:
                  type: string
                  example: 40KG.
                warranty:
                  type: number
                  example: 2 
    ProductDetails:
      type: array
      items:
        $ref: "#/components/schemas/ProductDetail" 
    Token:
      type: object
      properties:
        name:
          type: string
          example: Anil 
        token:
          type: string
          example: wwqewqereffssadweweewrasdsadasd    
    cart:
      type: object
      properties:
                productName:
                  type: string
                  example: Door
                image:
                  type: string
                  example: xyz
                price:
                  type: number
                  example: 233
                quantitySelected:
                  type: number
                  example: 2
                brand:
                  type: string
                  example: sara  
                productId:
                  type: string
                  example: sfsfs
                productDetailId:
                  type: string
                  example: dadsfs                    
    carts:
      type: array
      items:
        $ref: "#/components/schemas/cart"                 